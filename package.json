{
  "_from": "iobroker.ventCubeControl",
  "_id": "iobroker.ventCubeControl@0.1.0",
  "_inBundle": false,
  "_location": "/iobroker.ventCubeControl",
  "_phantomChildren": {},
  "_spec": "iobroker.ventCubeControl",
  "_where": "/",
  "author": {
    "name": "LightYarn",
    "email": "LightYarn@gmail.com"
  },
  "bugs": {
    "url": ""
  },
  "bundleDependencies": false,
  "contributors": [
    {
      "name": "LightYarn",
      "email": "LightYarn@gmail.com"
    }
  ],
  "dependencies": {
    "@iobroker/adapter-core": "^1.0.3"    
  },
  "deprecated": false,
  "description": "ioBroker ventCube Adapter",
  "devDependencies": {
    "@babel/core": "^7.2.2",
    "@iobroker/testing": "^1.1.4",
    "@types/chai": "^4.1.3",
    "@types/chai-as-promised": "^7.1.0",
    "@types/enzyme": "^3.1.15",
    "@types/enzyme-adapter-react-16": "^1.0.3",
    "@types/jquery": "^3.3.22",
    "@types/materialize-css": "^1.0.3",
    "@types/mocha": "^5.2.0",
    "@types/node": "^12.0.0",
    "@types/react": "^16.3.14",
    "@types/react-dom": "^16.0.5",
    "@types/sinon": "^7.0.11",
    "axios": "^0.19.0",
    "chai": "^4.1.2",
    "chai-as-promised": "^7.1.1",
    "cpx": "^1.5.0",
    "enzyme": "^3.3.0",
    "enzyme-adapter-react-16": "^1.1.1",
    "gulp": "^4.0.0",
    "iobroker-react-components": "^1.0.0",
    "jquery": "^3.3.1",
    "jsdom": "^15.0.0",
    "mocha": "^6.0.2",
    "node-ssh": "^6.0.0",
    "nyc": "^14.0.0",
    "parcel-bundler": "^1.12.3",
    "react": "^16.3.2",
    "react-dom": "^16.3.2",
    "react-test-renderer": "^16.3.2",
    "release-script": "github:AlCalzone/release-script#v1.0.0-beta.2",
    "rexreplace": "^4.1.1",
    "rimraf": "^3.0.0",
    "semver": "^6.0.0",
    "sinon": "^7.3.1",
    "source-map-support": "^0.5.6",
    "ts-loader": "^6.0.0",
    "ts-node": "^8.0.3",
    "tslint": "^5.11.0",
    "tslint-react": "^4.0.0",
    "typescript": "^3.1.6"
  },
  "files": [
    "build/",
    "admin/build/",
    "admin/icons/",
    "admin/*.{html,css,js,png}",
    "LICENSE",
    "io-package.json"
  ],
  "homepage": "",
  "keywords": [
    "ioBroker",
    "ventCubeControl",
    "Smart Home",
    "home automation"
  ],
  "license": "MIT",
  "main": "build/main.js",
  "name": "iobroker.ventCubeControl",
  "nyc": {
    "include": [
      "src/**/*.ts",
      "admin/src/**/*.ts*"
    ],
    "exclude": [
      "src/**/*.test.ts*",
      "admin/src/**/*.test.ts*"
    ],
    "extension": [
      ".ts",
      ".tsx"
    ],
    "require": [
      "ts-node/register"
    ],
    "reporter": [
      "text-summary",
      "html"
    ],
    "sourceMap": true,
    "instrument": true
  },
  "repository": {
    "type": "git",
    "url": ""
  },
  "scripts": {
    "build": "npm run build:ts && npm run build:parcel",
    "build:parcel": "parcel build admin/src/index.tsx -d admin/build",
    "build:ts": "tsc -p src/tsconfig.json",
    "check:ts": "tsc -p src/tsconfig.json --noEmit",
    "coverage": "node node_modules/nyc/bin/nyc npm run test",
    "deploy_local": "node --require ts-node/register maintenance/deploy_local.ts",
    "fixSourceMaps": "rexreplace \"\\\"sources\\\"\\:\\[\\\"../../\" \"\\\"sources\\\"\\:\\[\\\"../\" \"{build/**,build}/*.map\"",
    "lint": "npm run lint:ts \"src/**/*.ts\"",
    "lint:ts": "tslint",
    "postbuild:ts": "npm run restoreBuildDirectoryStructure && npm run fixSourceMaps",
    "prebuild:ts": "rimraf ./build",
    "prepublishOnly": "npm run test:package",
    "release": "npx release-script",
    "restoreBuildDirectoryStructure": "cpx \"build/src/**/*.*\" build && rimraf build/src && rimraf build/{io-,}package.json",
    "test": "npm run test:ts && npm run test:tsx",
    "test:integration": "mocha test/integration --exit",
    "test:package": "mocha test/package --exit",
    "test:ts": "node node_modules/mocha/bin/mocha --require ts-node/register --require source-map-support/register src/**/*.test.ts",
    "test:tsx": "node node_modules/mocha/bin/mocha --require test/setupJSDom.js --require ts-node/register --require source-map-support/register **/src/**/*.test.tsx",
    "test:unit": "mocha test/unit --exit",
    "watch": "tsc -p src/tsconfig.json --watch",
    "watch:parcel": "parcel admin/src/index.tsx -d admin/build"
  },
  "version": "0.1.0"
}
